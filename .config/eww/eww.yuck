;; ** Variables *********************************

;; Music vars
(defpoll SONG :interval "1s" `scripts/music --song`)
(defpoll ARTIST :interval "1s" `scripts/music --artist`)
(defpoll COVER :interval "1s" `scripts/music --cover`)
(defpoll STATUS :interval "1s" `scripts/music --play_status`)
(defpoll SHUFFLE :interval "1s" `scripts/music --shuffle_status`)
(defpoll LOOP :interval "1s" `scripts/music --loop_status`)


;; ** Elements **********************************

;; power buttons
(defwidget lock []
  (box :class "genwin"
	  (button :class "btn_lock"
	          :onclick "scripts/powermenu --lock" "")))

(defwidget logout []
  (box :class "genwin"
	  (button :class "btn_logout"
	          :onclick "scripts/powermenu --logout" "")))

(defwidget suspend []
  (box :class "genwin"
	  (button :class "btn_suspend"
	          :onclick "scripts/powermenu --suspend" "")))

(defwidget reboot []
  (box :class "genwin"
	  (button :class "btn_reboot"
	          :onclick "scripts/powermenu --reboot" "")))

(defwidget poweroff []
  (box :class "genwin"
	  (button :class "btn_poweroff"
	          :onclick "scripts/powermenu --poweroff" "")))


;; ** Widgets ***********************************

;; Music
(defwidget music []
  (box :class "background"
    (box :class "genwin"
         :orientation "v"
         :space-evenly "false"
      (box :class "genwin"
           :orientation "h"
           :space-evenly "true"
        (box :class "album_art"
             :style "background-image: url('${COVER}');")
        (box :orientation "v"
	  	    (label :halign "center"
	  	           :class "song"
	  	           :wrap "true"
	  	           :limit-width 20
	  	           :text SONG)
	  	    (label :halign "center"
	  	           :class "artist"
	  	           :wrap "true"
	  	           :limit-width 15
	  	           :text ARTIST)))
		  (box :orientation "h"
		       :spacing 30
		       :halign "center"
		       :space-evenly "true"
		    (button :class "btn_shuffle"
		            :style "color: ${SHUFFLE};"
		            :onclick "scripts/music --shuffle" "")
		    (button :class "btn_prev"
		            :onclick "scripts/music --prev" "玲")
		    (button :class "btn_play"
		            :onclick "scripts/music --play" STATUS)
		    (button :class "btn_next"
		            :onclick "scripts/music --next" "怜")
		    (button :class "btn_loop"
		            :style "color: ${LOOP};"
		            :onclick "scripts/music --loop" "")))))

(defwidget powerbuttons []
  (box :class "background"
       :orientation "h"
       :space-evenly "true"
       :spacing 10
       :width 415
    (lock)
    (logout)
    (suspend)
    (reboot)
    (poweroff)))


;; ** Windows ***********************************

(defwindow music
           :stacking "fg"
           :focusable "false"
           :monitor 0
           :geometry (geometry :anchor "top right"
                               :x 6
                               :y 6)
  (music))

(defwindow powerbuttons
           :stacking "fg"
           :focusable "false"
           :monitor 0
           :geometry (geometry :anchor "top right"
                               :x 6
                               :y 284)
  (powerbuttons))

